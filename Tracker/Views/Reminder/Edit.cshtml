@using Tracker.Data
@using Microsoft.EntityFrameworkCore
@using System.Linq
@using Microsoft.AspNetCore.Identity
@model Tracker.Models.Reminder?
@inject ApplicationDbContext _db
@inject UserManager<ApplicationUser> _userManager

@{
  ViewBag.Title = $"Edit {Model?.Name ?? "Reminder"}";
  Layout = "_Layout";
  var reminderTypes = await _db.ReminderTypes.Where(x => x.UserId == _userManager.GetUserId(User))
    .Select(x => new SelectListItem(x.Name, x.Id.ToString())).ToListAsync();
}

<h2>Edit Reminder</h2>

@if (Model == null)
{
  <div class="alert alert-danger" role="alert">
    Reminder not found. <a asp-action="List">Return to list.</a>
  </div>
  return;
}

<form asp-action="Edit" method="post">
  <div class="mb-3">
    <label asp-for="Name" class="form-label">Name</label>
    <input type="text" class="form-control" asp-for="Name">
    <span asp-validation-for="Name" class="text-danger"></span>
  </div>
  <div class="mb-3">
    <label asp-for="ReminderTypeId" class="form-label">Category</label>
    <select asp-for="ReminderTypeId" class="form-select" asp-items="reminderTypes">
      <option>-- Select --</option>
    </select>
    <span asp-validation-for="ReminderTypeId" class="text-danger"></span>
  </div>
  <div class="mb-3">
    <label asp-for="CronLocal" class="form-label" aria-describedby="cronHelp">Cron Expression</label>
    <input type="text" asp-for="CronLocal" class="form-control" />
    <div id="cronHelp" class="form-text">This will be a user-friendly UI control at some point...</div>
    <span asp-validation-for="CronLocal" class="text-danger"></span>
  </div>
  <button type="submit" class="btn btn-primary">Save</button>
</form>